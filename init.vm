""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""
""""""
""""""         Settings
""""""
""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""



"""""" PLUGINS """""""""""
""""""""""""""""""""""""""

call plug#begin()
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
call plug#end()



"""""" APP """""""""""
""""""""""""""""""""""

" turn off compatibility mode from vi
set nocompatible

" No annoying sound on errors
set noerrorbells
set t_vb=
set tm=500
command! Nob set vb t_vb=
set vb t_vb=
set visualbell

" show partial commands on the right of the command window
set showcmd


"""""""""" STATUS LINE """""""
""""""""""""""""""""""""""""""

:set laststatus=2



"""""" FORMATTING """"""
""""""""""""""""""""""""

" Line Numbers
set relativenumber
au InsertEnter * set norelativenumber number
au InsertLeave * set relativenumber

" Who doesn't like autoindent?
set autoindent

syntax enable

" tabbing
set smarttab
set shiftwidth=2
set tabstop=2
" Use spaces instead of tabs
set expandtab



""""""" KEYS """""""
""""""""""""""""""""

let mapleader = " "

" omnicomplete shortcut
inoremap <C-Space> <C-x><C-o>

" evil remaps from hell
nnoremap ' `
nnoremap ` '

nnoremap ; :
nnoremap : ;

inoremap jk <ESC>

" select all with ctrl-a
nmap <C-A> mzgg^V$G

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" map control -n to next buffer
:nnoremap <C-n> :bnext<CR>

" scroll buffer while keeping cursor on same line relative to viewport
map <c-j> j<c-e>
map <c-k> k<c-y>



"""""""" BUFFERS """"""""
"""""""""""""""""""""""""

" when :vs the loaded file will show up on the right
set splitright

set foldlevel=99
set foldmethod=indent

autocmd! BufNewFile,BufReadPost *.md set filetype=markdown
autocmd! BufNewFile,BufReadPost *.vm set filetype=vim

" start editing last file
command! GoL :e#


"""""""" FILES """""""""
""""""""""""""""""""""""

set encoding=utf8
" auto reload changed files (doesn't really work very well)
set autoread

" turn off auto backing up - using google drive or git anyway right? :)
set nobackup
set noswapfile
set nowb
set nowrap
" allow hidden buffers - don't complain about not saving them
set hidden

"enable inline spellcheck
set spelllang=en_gb



"""""""" SEARCHING """""""""
""""""""""""""""""""""""""""

" Ignore case when searching
set ignorecase
set smartcase
" Highlight search results
set hlsearch
" akes search act like search in modern browsers
set incsearch
set wildignore+=node_modules/**
set wildignore+=packages/**
set wildignore+=3rdparty/**
set wildignore+=bower_components/**
set wildignore+=coverage/**
set wildignore+=tags
set wildignore+=target/**
set wildignore+=.teamcity/**



"""""""""" Plugins """"""""""
""""""""""""""""""""""""""""""

" ctrl-p
let g:ctrlp_working_path_mode = 'r'
let g:ctrlp_max_files = 0
let g:ctrlp_custom_ignore = {
            \ 'dir':  '\v[\/]\.(git|hg|svn|teamcity|vs)$\|node_modules$\|bower_components$\|packages$\|3rdparty$\|coverage$\|target$',
            \ 'file': '\v\.(exe|so|dll|class)$'
            \ }
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']


" nerdtree
" close vim if nerdtree only window left open
autocmd! bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" Use deoplete.
let g:deoplete#enable_at_startup = 1
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"



""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""
""""""
""""""         Commmands
""""""
""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""


"""""" PRESENTING """"""
""""""""""""""""""""""""

command! MakeFontBiggest set guifont=Consolas:h18:cANSI
command! MakeFontBigger set guifont=Consolas:h16:cANSI
command! MakeFontBig set guifont=Consolas:h14:cANSI
command! MakeFontNormal set guifont=Consolas:h12:cANSI
command! MakeFontSmall set guifont=Consolas:h10:cANSI



"""""" FORMATTING """"""
""""""""""""""""""""""""

command! AutoIndent :normal mzgg=G'z

function! RemoveTrailingWhitespaceFromFile()
    :let _s=@/
    :%s/\s\+$//e
    :let @/=_s
endfunction

command! RemoveAllTrailingWhitespace call RemoveTrailingWhitespaceFromFile()



"""""""""" Diffing """"""""""
""""""""""""""""""""""""""""""""
command! GetLeft :diffget //2
command! GetRight :diffget //3



"""""""""" JavaScript """"""""""
""""""""""""""""""""""""""""""""

function! GotoImportInCurrentWindow()
    :normal 0f/gf
endfunction

function! GotoImportInNewSplit()
    :normal 0f/
    :wincmd f
endfunction

function! GotoImportInNewVerticalSplit()
    call GotoImportInNewSplit()
    :wincmd L
endfunction

command! GotoImport call GotoImportInCurrentWindow()
command! GotoImportInSplit call GotoImportInNewSplit()
command! GotoImportInVSplit call GotoImportInNewVerticalSplit()

" add .only to current mocha it
nnoremap ton :silent ?it(<CR>la.only<ESC>:noh<CR>
" remove .only to current mocha it
nnoremap tnon :silent ?it.only<CR>lldt(:noh<CR>



"""""""""" JSON """"""""""
""""""""""""""""""""""""""""""""

function! FormatJSONFunc()
  :%!python -m json.tool
endfunction

command! FormatJSON call FormatJSONFunc()



"""""""""" XML """"""""""
""""""""""""""""""""""""""""""""

function! DoPrettyXML()
    " save the filetype so we can restore it later
    let l:origft = &ft
    set ft=
    " delete the xml header if it exists. This will
    " permit us to surround the document with fake tags
    " without creating invalid xml.
    1s/<?xml .*?>//e
    " insert fake tags around the entire document.
    " This will permit us to pretty-format excerpts of
    " XML that may contain multiple top-level elements.
    0put ='<PrettyXML>'
    $put ='</PrettyXML>'
    silent %!xmllint --format -
    " xmllint will insert an <?xml?> header. it's easy enough to delete
    " if you don't want it.
    " delete the fake tags
    2d
    $d
    " restore the 'normal' indentation, which is one extra level
    " too deep due to the extra tags we wrapped around the document.
    silent %<
    " back to home
    1
    " restore the filetype
    exe "set ft=" . l:origft
endfunction
command! PrettyXML call DoPrettyXML()
